{"ast":null,"code":"import _slicedToArray from \"/Users/stevenperegrine/Desktop/Web Projects/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stevenperegrine/Desktop/Web Projects/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SecureLS from 'secure-ls'; //import ethers from 'ethers';\n\nimport { ethers } from 'ethers';\n\nconst axios = require('axios');\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  } //We call the generate wallet function through here so the UI will update\n\n\n  genWallet(seed) {\n    generateWallet(seed);\n    this.forceUpdate();\n  }\n\n  revealKey() {\n    document.getElementById(\"privKey\").innerHTML = \"Private Key: \" + myWallet.privateKey;\n    document.getElementById(\"seed\").innerHTML = \"Seed: \" + myWallet.mnemonic;\n    this.forceUpdate();\n  }\n\n  loadSeed() {\n    try {\n      let ls = new SecureLS();\n      return ls.get('walletSeed').data;\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  switchWallet() {\n    myWallet = null;\n    let ls = new SecureLS();\n    ls.remove('walletSeed');\n    this.forceUpdate();\n  }\n\n  hardcodedload() {\n    const t = this;\n    var turns = [];\n    axios.get('https://api.simbachain.com/v1/react_tictactoe/turns/', {\n      headers: {\n        'APIKEY': '8fbfe71045403b1a0c36d73c4160f778dda31bbd2249d20cf98e3485f5743933'\n      }\n    }).then(function (response) {\n      const turn0 = response.data.results[0].payload.inputs.turn0.split(\";\");\n      const turn1 = response.data.results[0].payload.inputs.turn1.split(\";\");\n      const turn2 = response.data.results[0].payload.inputs.turn2.split(\";\");\n      const turn3 = response.data.results[0].payload.inputs.turn3.split(\";\");\n      const turn4 = response.data.results[0].payload.inputs.turn4.split(\";\");\n      const turn5 = response.data.results[0].payload.inputs.turn5.split(\";\");\n      const turn6 = response.data.results[0].payload.inputs.turn6.split(\";\");\n      const turn7 = response.data.results[0].payload.inputs.turn7.split(\";\");\n      const turn8 = response.data.results[0].payload.inputs.turn8.split(\";\");\n      const turn9 = response.data.results[0].payload.inputs.turn9.split(\";\");\n      var cell;\n\n      for (cell = 0; cell < turn0.length; cell++) {\n        if (turn0[cell] == \"null\") {\n          turn0[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn1.length; cell++) {\n        if (turn1[cell] == \"null\") {\n          turn1[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn2.length; cell++) {\n        if (turn2[cell] == \"null\") {\n          turn2[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn3.length; cell++) {\n        if (turn3[cell] == \"null\") {\n          turn3[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn4.length; cell++) {\n        if (turn4[cell] == \"null\") {\n          turn4[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn4.length; cell++) {\n        if (turn5[cell] == \"null\") {\n          turn5[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn6.length; cell++) {\n        if (turn6[cell] == \"null\") {\n          turn6[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn7.length; cell++) {\n        if (turn7[cell] == \"null\") {\n          turn7[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn8.length; cell++) {\n        if (turn8[cell] == \"null\") {\n          turn8[cell] = null;\n        }\n      }\n\n      for (cell = 0; cell < turn9.length; cell++) {\n        if (turn9[cell] == \"null\") {\n          turn9[cell] = null;\n        }\n      }\n\n      turns = [turn0, turn1, turn2, turn3, turn4, turn5, turn6, turn7, turn8, turn9]; // this.displayData(turns);\n\n      console.log(turns);\n      var limit;\n\n      for (var i = 0; i < turns.length; i++) {\n        if (turns[i] == \" \") {\n          turns[i] = [null, null, null, null, null, null, null, null, null];\n        }\n      }\n\n      const history = t.state.history.slice(0, t.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      history.length = 0;\n\n      for (var num = 0; num < turns.length; num++) {\n        t.setState({\n          history: history.concat([{\n            squares: turns[num]\n          }]),\n          stepNumber: history.length,\n          xIsNext: !t.state.xIsNext\n        });\n      }\n    });\n  }\n\n  saveGame() {\n    var apiKey = \"8fbfe71045403b1a0c36d73c4160f778dda31bbd2249d20cf98e3485f5743933\";\n    console.log(\"FROM\");\n    console.log(myWallet.address);\n    console.log(\"API KEY\");\n    console.log(apiKey);\n    console.log(\"MOVES\");\n    var moves = [];\n\n    for (var i = 0; i < this.state.history.length; i++) {\n      var parsed = this.state.history[i].squares[0];\n\n      for (var p = 1; p < this.state.history[i].squares.length; p++) {\n        parsed += \";\" + this.state.history[i].squares[p];\n      }\n\n      moves[i] = parsed;\n    }\n\n    var move0 = \" \";\n    var move1 = \" \";\n    var move2 = \" \";\n    var move3 = \" \";\n    var move4 = \" \";\n    var move5 = \" \";\n    var move6 = \" \";\n    var move7 = \" \";\n    var move8 = \" \";\n    var move9 = \" \";\n\n    for (var i = 0; i < moves.length; i++) {\n      console.log(moves[i]);\n\n      if (i == 0) {\n        move0 = moves[i];\n      }\n\n      if (i == 1) {\n        move1 = moves[i];\n      }\n\n      if (i == 2) {\n        move2 = moves[i];\n      }\n\n      if (i == 3) {\n        move3 = moves[i];\n      }\n\n      if (i == 4) {\n        move4 = moves[i];\n      }\n\n      if (i == 5) {\n        move5 = moves[i];\n      }\n\n      if (i == 6) {\n        move6 = moves[i];\n      }\n\n      if (i == 7) {\n        move7 = moves[i];\n      }\n\n      if (i == 8) {\n        move8 = moves[i];\n      }\n\n      if (i == 9) {\n        move9 = moves[i];\n      }\n    }\n\n    console.log(\"onto posting\");\n    /* var myBody = {  from: myWallet.address,\n                     name: \"Test Game\",\n                     turn0: move0,\n                     turn1: move1,\n                     turn2: move2,\n                     turn3: move3,\n                     turn4: move4,\n                     turn5: move5,\n                     turn6: move6,\n                     turn7: move7,\n                     turn8: move8,\n                     turn9: move9}; */\n\n    var myBody = new FormData();\n    myBody.append(\"from\", myWallet.address);\n    myBody.append(\"name\", \"Test Game\");\n    myBody.append(\"turn0\", move0);\n    myBody.append(\"turn1\", move1);\n    myBody.append(\"turn2\", move2);\n    myBody.append(\"turn3\", move3);\n    myBody.append(\"turn4\", move4);\n    myBody.append(\"turn5\", move5);\n    myBody.append(\"turn6\", move6);\n    myBody.append(\"turn7\", move7);\n    myBody.append(\"turn8\", move8);\n    myBody.append(\"turn9\", move9);\n    myBody.append(\"assetId\", \"0x0\");\n    axios.post('https://api.simbachain.com/v1/react_tictactoe/turns/', myBody, {\n      headers: {\n        'APIKEY': '8fbfe71045403b1a0c36d73c4160f778dda31bbd2249d20cf98e3485f5743933'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    /* var request = new XMLHttpRequest();\n     request.open(\"POST\", \"https://api.simbachain.com/v1/react_tictactoe/#/contract_methods/turns\");\n     request.setRequestHeader(\"APIKEY\",apiKey);\n     request.setRequestHeader(\"accept\",\"application/json\");\n     request.setRequestHeader(\"Content-Type\",\"multipart/form-data\");\n     request.onload = function(oEvent) {\n     if (request.status == 200) {\n         console.log(\"Good one\");\n     } else {\n         console.log(\"oof\");\n         }\n     };\n     request.send(myBody);*/\n\n    console.log(\"done with posting????\");\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"button animatedbutton\",\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, desc)));\n    }); //if the game is over display the save to simba button otherwise leave it as the div\n\n    var simbaButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    });\n\n    if (winner || moves.length >= 10) {\n      simbaButton = React.createElement(\"button\", {\n        onClick: i => this.saveGame(),\n        class: \"bigbutton animatedbutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"Save to SIMBA\");\n    }\n\n    var wallet = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Wallet Seed: \", React.createElement(\"input\", {\n      id: \"seedInput\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }), \" \"), React.createElement(\"button\", {\n      class: \"bigbutton animatedbutton\",\n      onClick: i => this.genWallet(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Generate Wallet\"));\n    var priv = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    });\n    var localWallet = getWallet();\n\n    try {\n      wallet = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Public Key: \", localWallet.address), React.createElement(\"p\", {\n        id: \"privKey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Private Key:\"), React.createElement(\"p\", {\n        id: \"seed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Seed:\"), React.createElement(\"button\", {\n        class: \"bigbutton animatedbutton\",\n        onClick: i => this.revealKey(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Reveal Key\"), React.createElement(\"button\", {\n        class: \"bigbutton animatedbutton\",\n        onClick: i => this.switchWallet(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Switch Wallet\"));\n    } catch (err) {\n      var seed = this.loadSeed();\n\n      if (seed) {\n        this.genWallet(seed);\n      }\n    }\n\n    let status;\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, wallet), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"bigbutton animatedbutton\",\n      onClick: i => this.hardcodedload(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"Load game\"))), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, moves), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, simbaButton)));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 481\n  },\n  __self: this\n}), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar myWallet;\n\nfunction getWallet() {\n  //returns the wallet for react\n  return myWallet;\n}\n\nfunction generateWallet(seed) {\n  console.log(\"start generate wallet\");\n  console.log(Game.myWallet);\n  /*\n  This function generates the wallet based off of the value of the 'seedInput'\n  The seed should be 12 words\n  This seed generates the public and private key of your wallet\n  */\n  //Here we get the 12 word phrase\n\n  try {\n    var mnemonic = document.getElementById(\"seedInput\").value;\n  } catch {\n    if (seed) {\n      mnemonic = seed;\n    }\n  } //Here the wallet is actually generated\n\n\n  try {\n    let mnemonicWallet = ethers.Wallet.fromMnemonic(mnemonic); //Here we assign the wallet to the global variable myWallet\n\n    myWallet = mnemonicWallet;\n    SaveWallet();\n    console.log(myWallet);\n    console.log(\"end generate wallet\");\n  } catch (err) {\n    alert(\"Invalid Seed\");\n  }\n}\n\nfunction signTransaction() {\n  //This is where signing takes place\n  if (myWallet) {\n    //we grab the text value from 'signInput' and run the tryParseJson function found below\n    let transaction = tryParseJSON(document.getElementById(\"signInput\").value); //that json is then signed here\n\n    let signPromise = myWallet.sign(transaction);\n    signPromise.then(signedTransaction => {\n      document.getElementById(\"signOutput\").value = signedTransaction;\n    });\n  } else {\n    //if no wallet is found this alert runs\n    alert(\"Generate wallet before signing\");\n  }\n}\n\nfunction tryParseJSON(jsonString) {\n  //we parse the json here\n  try {\n    var o = JSON.parse(jsonString); // Handle non-exception-throwing cases:\n    // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n    // but... JSON.parse(null) returns null, and typeof null === \"object\",\n    // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n\n    if (o && typeof o === \"object\") {\n      return o;\n    }\n  } catch (e) {}\n\n  return false;\n}\n\n; //Save and load wallets\n\nfunction SaveWallet() {\n  if (myWallet) {\n    //we save the 12 word wallet seed then on load we will generate everything else\n    //SecureLS is used because it does not store the 12 words in plain text\n    //If you wanted to you could make it where the user had to put in a password to unlock their account\n    let ls = new SecureLS();\n    ls.set('walletSeed', {\n      data: myWallet.mnemonic\n    });\n  } else {\n    alert(\"No wallet present to save\");\n  }\n}\n\nfunction LoadWallet() {\n  //the wallet is loaded and generate wallet is ran to populate the fields\n  //while not the best code to get the seed to the generate wallet function we set the value of 'walletSeed' to the data we just loaded\n  try {\n    let ls = new SecureLS();\n    document.getElementById(\"seedInput\").value = ls.get('walletSeed').data;\n    generateWallet();\n  } catch (err) {}\n}","map":{"version":3,"sources":["/Users/stevenperegrine/Desktop/Web Projects/my-app/src/index.js"],"names":["React","ReactDOM","SecureLS","ethers","axios","require","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","genWallet","seed","generateWallet","forceUpdate","revealKey","document","getElementById","innerHTML","myWallet","privateKey","mnemonic","loadSeed","ls","get","data","err","alert","switchWallet","remove","hardcodedload","t","turns","headers","then","response","turn0","results","payload","inputs","split","turn1","turn2","turn3","turn4","turn5","turn6","turn7","turn8","turn9","cell","console","log","limit","num","saveGame","apiKey","address","moves","parsed","p","move0","move1","move2","move3","move4","move5","move6","move7","move8","move9","myBody","FormData","append","post","catch","error","winner","map","move","desc","simbaButton","wallet","priv","localWallet","getWallet","status","lines","a","b","c","mnemonicWallet","Wallet","fromMnemonic","SaveWallet","signTransaction","transaction","tryParseJSON","signPromise","sign","signedTransaction","jsonString","o","JSON","parse","e","set","LoadWallet"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,SAASC,MAAT,QAAuB,QAAvB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,SACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,KADT,CADF;AAKD;;AAID,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAoC;AAClCC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,WACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBD,CAAnB,CADT;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAFA,EAOA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAPA,EAYA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAZA,CADJ;AAqBD;;AAhCiC;;AAmCpC,MAAMI,IAAN,SAAmBhB,KAAK,CAACW,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKW,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CACP;AACEL,QAAAA,OAAO,EAAEM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADX,OADO,CADE;AAMXC,MAAAA,UAAU,EAAE,CAND;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASD;;AAEDC,EAAAA,WAAW,CAACX,CAAD,EAAI;AACb,UAAMM,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBM,KAAnB,CAAyB,CAAzB,EAA4B,KAAKP,KAAL,CAAWI,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMI,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMb,OAAO,GAAGY,OAAO,CAACZ,OAAR,CAAgBW,KAAhB,EAAhB;;AACA,QAAIG,eAAe,CAACd,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;AAC1C;AACD;;AACDC,IAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKK,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKM,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CAAe,CACtB;AACEhB,QAAAA,OAAO,EAAEA;AADX,OADsB,CAAf,CADG;AAMZQ,MAAAA,UAAU,EAAEH,OAAO,CAACQ,MANR;AAOZJ,MAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAPT,KAAd;AASD;;AAEDQ,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,SAAKH,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAEU,IADA;AAEZT,MAAAA,OAAO,EAAGS,IAAI,GAAG,CAAR,KAAe;AAFZ,KAAd;AAID,GAtCgC,CA0C/B;;;AAEAC,EAAAA,SAAS,CAACC,IAAD,EACT;AACIC,IAAAA,cAAc,CAACD,IAAD,CAAd;AACA,SAAKE,WAAL;AACH;;AACDC,EAAAA,SAAS,GACT;AACIC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAAgD,kBAAkBC,QAAQ,CAACC,UAA3E;AACAJ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA6C,WAAWC,QAAQ,CAACE,QAAjE;AACC,SAAKP,WAAL;AACJ;;AAEDQ,EAAAA,QAAQ,GACR;AACK,QAAG;AACH,UAAIC,EAAE,GAAG,IAAI3C,QAAJ,EAAT;AACD,aAAO2C,EAAE,CAACC,GAAH,CAAO,YAAP,EAAqBC,IAA5B;AAGE,KALD,CAMD,OAAMC,GAAN,EAAU;AACNC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACH;AACJ;;AACDE,EAAAA,YAAY,GAAE;AACVT,IAAAA,QAAQ,GAAG,IAAX;AACA,QAAII,EAAE,GAAG,IAAI3C,QAAJ,EAAT;AACA2C,IAAAA,EAAE,CAACM,MAAH,CAAU,YAAV;AACA,SAAKf,WAAL;AACH;;AAIDgB,EAAAA,aAAa,GAAE;AAEX,UAAMC,CAAC,GAAG,IAAV;AAEA,QAAIC,KAAK,GAAG,EAAZ;AAIDlD,IAAAA,KAAK,CAAC0C,GAAN,CAAU,sDAAV,EAAiE;AAC5DS,MAAAA,OAAO,EAAE;AACL,kBAAW;AADN;AADmD,KAAjE,EAIEC,IAJF,CAIO,UAAUC,QAAV,EAAoB;AACtB,YAAMC,KAAK,GAAGD,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCH,KAAxC,CAA8CI,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMC,KAAK,GAAGN,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCE,KAAxC,CAA8CD,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAME,KAAK,GAAGP,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCG,KAAxC,CAA8CF,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMG,KAAK,GAAGR,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCI,KAAxC,CAA8CH,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMI,KAAK,GAAGT,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCK,KAAxC,CAA8CJ,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMK,KAAK,GAAGV,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCM,KAAxC,CAA8CL,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMM,KAAK,GAAGX,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCO,KAAxC,CAA8CN,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMO,KAAK,GAAGZ,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCQ,KAAxC,CAA8CP,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMQ,KAAK,GAAGb,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCS,KAAxC,CAA8CR,KAA9C,CAAoD,GAApD,CAAd;AACA,YAAMS,KAAK,GAAGd,QAAQ,CAACV,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiCC,MAAjC,CAAwCU,KAAxC,CAA8CT,KAA9C,CAAoD,GAApD,CAAd;AAED,UAAIU,IAAJ;;AACC,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGd,KAAK,CAAC/B,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC5C,YAAId,KAAK,CAACc,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBd,UAAAA,KAAK,CAACc,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAEF,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGT,KAAK,CAACpC,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC3C,YAAIT,KAAK,CAACS,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBT,UAAAA,KAAK,CAACS,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAEF,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGR,KAAK,CAACrC,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC3C,YAAIR,KAAK,CAACQ,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBR,UAAAA,KAAK,CAACQ,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAEF,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGP,KAAK,CAACtC,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC3C,YAAIP,KAAK,CAACO,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBP,UAAAA,KAAK,CAACO,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAGD,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGN,KAAK,CAACvC,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC5C,YAAIN,KAAK,CAACM,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBN,UAAAA,KAAK,CAACM,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAED,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGN,KAAK,CAACvC,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC5C,YAAIL,KAAK,CAACK,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBL,UAAAA,KAAK,CAACK,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAED,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGJ,KAAK,CAACzC,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC5C,YAAIJ,KAAK,CAACI,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBJ,UAAAA,KAAK,CAACI,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAED,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGH,KAAK,CAAC1C,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC5C,YAAIH,KAAK,CAACG,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBH,UAAAA,KAAK,CAACG,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAED,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGF,KAAK,CAAC3C,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC5C,YAAIF,KAAK,CAACE,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBF,UAAAA,KAAK,CAACE,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAED,WAAKA,IAAI,GAAG,CAAZ,EAAgBA,IAAI,GAAGD,KAAK,CAAC5C,MAA7B,EAAqC6C,IAAI,EAAzC,EAA6C;AAC5C,YAAID,KAAK,CAACC,IAAD,CAAL,IAAe,MAAnB,EAA2B;AACvBD,UAAAA,KAAK,CAACC,IAAD,CAAL,GAAc,IAAd;AACC;AACL;;AAaDlB,MAAAA,KAAK,GAAG,CAACI,KAAD,EAAOK,KAAP,EAAaC,KAAb,EAAmBC,KAAnB,EAAyBC,KAAzB,EAA+BC,KAA/B,EAAqCC,KAArC,EAA2CC,KAA3C,EAAiDC,KAAjD,EAAuDC,KAAvD,CAAR,CArFsB,CAuFvB;;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AAEC,UAAIqB,KAAJ;;AACD,WAAK,IAAI9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyC,KAAK,CAAC3B,MAA1B,EAAkCd,CAAC,EAAnC,EAAuC;AACnC,YAAIyC,KAAK,CAACzC,CAAD,CAAL,IAAY,GAAhB,EACA;AACIyC,UAAAA,KAAK,CAACzC,CAAD,CAAL,GAAW,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,EAAyC,IAAzC,CAAX;AAEF;AAEL;;AAEA,YAAMM,OAAO,GAAGkC,CAAC,CAACnC,KAAF,CAAQC,OAAR,CAAgBM,KAAhB,CAAsB,CAAtB,EAAyB4B,CAAC,CAACnC,KAAF,CAAQI,UAAR,GAAqB,CAA9C,CAAhB;AACA,YAAMI,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,YAAMb,OAAO,GAAGY,OAAO,CAACZ,OAAR,CAAgBW,KAAhB,EAAhB;AACAN,MAAAA,OAAO,CAACQ,MAAR,GAAiB,CAAjB;;AAED,WAAK,IAAIiD,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGtB,KAAK,CAAC3B,MAA9B,EAAsCiD,GAAG,EAAzC,EAA6C;AAE5CvB,QAAAA,CAAC,CAACxB,QAAF,CAAW;AACXV,UAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CACJ,CACG;AACIhB,YAAAA,OAAO,EAAEwC,KAAK,CAACsB,GAAD;AADlB,WADH,CADI,CADE;AAOXtD,UAAAA,UAAU,EAAEH,OAAO,CAACQ,MAPT;AAQXJ,UAAAA,OAAO,EAAE,CAAC8B,CAAC,CAACnC,KAAF,CAAQK;AARP,SAAX;AAUA;AASH,KAnIF;AA2IF;;AAGDsD,EAAAA,QAAQ,GAAE;AACN,QAAIC,MAAM,GAAG,kEAAb;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYjC,QAAQ,CAACsC,OAArB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAIM,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKK,KAAL,CAAWC,OAAX,CAAmBQ,MAAvC,EAA+Cd,CAAC,EAAhD,EACI;AAEI,UAAIoE,MAAM,GAAG,KAAK/D,KAAL,CAAWC,OAAX,CAAmBN,CAAnB,EAAsBC,OAAtB,CAA8B,CAA9B,CAAb;;AACC,WAAK,IAAIoE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhE,KAAL,CAAWC,OAAX,CAAmBN,CAAnB,EAAsBC,OAAtB,CAA8Ba,MAAlD,EAA0DuD,CAAC,EAA3D,EACG;AACID,QAAAA,MAAM,IAAI,MAAM,KAAK/D,KAAL,CAAWC,OAAX,CAAmBN,CAAnB,EAAsBC,OAAtB,CAA8BoE,CAA9B,CAAhB;AACH;;AAELF,MAAAA,KAAK,CAACnE,CAAD,CAAL,GAAWoE,MAAX;AACH;;AACL,QAAIE,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,KAAK,GAAG,GAAZ;;AAEC,SAAK,IAAI/E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmE,KAAK,CAACrD,MAA1B,EAAkCd,CAAC,EAAnC,EACI;AACI4D,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACnE,CAAD,CAAjB;;AAEA,UAAIA,CAAC,IAAI,CAAT,EACA;AAACsE,QAAAA,KAAK,GAAGH,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAACuE,QAAAA,KAAK,GAAGJ,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAACwE,QAAAA,KAAK,GAAGL,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAACyE,QAAAA,KAAK,GAAGN,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAAC0E,QAAAA,KAAK,GAAGP,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAAC2E,QAAAA,KAAK,GAAGR,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAAC4E,QAAAA,KAAK,GAAGT,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAAC6E,QAAAA,KAAK,GAAGV,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAAC8E,QAAAA,KAAK,GAAGX,KAAK,CAACnE,CAAD,CAAb;AAAkB;;AACnB,UAAIA,CAAC,IAAI,CAAT,EACA;AAAC+E,QAAAA,KAAK,GAAGZ,KAAK,CAACnE,CAAD,CAAb;AAAkB;AAEtB;;AACN4D,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;;;;;;;;;;;;AAYC,QAAImB,MAAM,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,MAAP,CAAc,MAAd,EAAqBtD,QAAQ,CAACsC,OAA9B;AACAc,IAAAA,MAAM,CAACE,MAAP,CAAc,MAAd,EAAqB,WAArB;AACAF,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBZ,KAAtB;AACAU,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBX,KAAtB;AACAS,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBV,KAAtB;AACAQ,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBT,KAAtB;AACAO,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBR,KAAtB;AACAM,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBP,KAAtB;AACAK,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBN,KAAtB;AACAI,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBL,KAAtB;AACAG,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBJ,KAAtB;AACAE,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBH,KAAtB;AACAC,IAAAA,MAAM,CAACE,MAAP,CAAc,SAAd,EAAwB,KAAxB;AAOA3F,IAAAA,KAAK,CAAC4F,IAAN,CAAW,sDAAX,EAAmEH,MAAnE,EAA2E;AACvEtC,MAAAA,OAAO,EAAE;AACL,kBAAW;AADN;AAD8D,KAA3E,EAILC,IAJK,CAIA,UAAUC,QAAV,EAAoB;AACxBgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACD,KANK,EAOLwC,KAPK,CAOC,UAAUC,KAAV,EAAiB;AACtBzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,KATK;AAYD;;;;;;;;;;;;;;AAaCzB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEH;;AAEH3D,EAAAA,MAAM,GAAG;AACP,UAAMI,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAAC,KAAKD,KAAL,CAAWI,UAAZ,CAAvB;AACA,UAAM6E,MAAM,GAAGvE,eAAe,CAACF,OAAO,CAACZ,OAAT,CAA9B;AAEA,UAAMkE,KAAK,GAAG7D,OAAO,CAACiF,GAAR,CAAY,CAACpE,IAAD,EAAOqE,IAAP,KAAgB;AACxC,YAAMC,IAAI,GAAGD,IAAI,GACf,iBAAiBA,IADF,GAEf,kBAFF;AAGA,aACE;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,KAAK,EAAC,uBAAd;AAAsC,QAAA,OAAO,EAAE,MAAM,KAAKtE,MAAL,CAAYsE,IAAZ,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyEC,IAAzE,CADA,CADF,CADF;AAQD,KAZa,CAAd,CALO,CAmBP;;AACA,QAAIC,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;;AACA,QAAIJ,MAAM,IAAInB,KAAK,CAACrD,MAAN,IAAgB,EAA9B,EACI;AACH4E,MAAAA,WAAW,GAAG;AAAQ,QAAA,OAAO,EAAE1F,CAAC,IAAI,KAAKgE,QAAL,EAAtB;AAAuC,QAAA,KAAK,EAAC,0BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAd;AACI;;AAGL,QAAI2B,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmB;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,MAAL,EAAoE;AAAQ,MAAA,KAAK,EAAC,0BAAd;AAAyC,MAAA,OAAO,EAAE3F,CAAC,IAAI,KAAKoB,SAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApE,CAAb;AAEI,QAAIwE,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AAEJ,QAAIC,WAAW,GAAGC,SAAS,EAA3B;;AACA,QAAI;AAAGH,MAAAA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgBE,WAAW,CAAC3B,OAA5B,CAAL,EAA6C;AAAG,QAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA7C,EAA6E;AAAG,QAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA7E,EAAmG;AAAQ,QAAA,KAAK,EAAC,0BAAd;AAAyC,QAAA,OAAO,EAAElE,CAAC,IAAI,KAAKwB,SAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnG,EAA+L;AAAQ,QAAA,KAAK,EAAC,0BAAd;AAAyC,QAAA,OAAO,EAAExB,CAAC,IAAI,KAAKqC,YAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA/L,CAAT;AAAkT,KAAzT,CACA,OAAMF,GAAN,EACG;AACE,UAAId,IAAI,GAAG,KAAKU,QAAL,EAAX;;AACA,UAAIV,IAAJ,EACI;AACI,aAAKD,SAAL,CAAeC,IAAf;AACH;AACN;;AAQJ,QAAI0E,MAAJ;AAGO,WAEL;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAElF,OAAO,CAACZ,OADnB;AAEE,MAAA,OAAO,EAAED,CAAC,IAAI,KAAKW,WAAL,CAAiBX,CAAjB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM2F,MAAN,CAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAQ,MAAA,KAAK,EAAC,0BAAd;AAAyC,MAAA,OAAO,EAAE3F,CAAC,IAAI,KAAKuC,aAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,CARA,CAHF,EAcE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMwD,MAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK5B,KAAL,CAFF,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMuB,WAAN,CAHJ,CAdF,CAFK;AAyBR;;AAragC,C,CAwanC;;;AAEAtG,QAAQ,CAACc,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BuB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B;;AAEA,SAASX,eAAT,CAAyBd,OAAzB,EAAkC;AAEhC,QAAM+F,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIhG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgG,KAAK,CAAClF,MAA1B,EAAkCd,CAAC,EAAnC,EAAuC;AAAA,oCACnBgG,KAAK,CAAChG,CAAD,CADc;AAAA,UAC9BiG,CAD8B;AAAA,UAC3BC,CAD2B;AAAA,UACxBC,CADwB;;AAErC,QAAIlG,OAAO,CAACgG,CAAD,CAAP,IAAchG,OAAO,CAACgG,CAAD,CAAP,KAAehG,OAAO,CAACiG,CAAD,CAApC,IAA2CjG,OAAO,CAACgG,CAAD,CAAP,KAAehG,OAAO,CAACkG,CAAD,CAArE,EAA0E;AACxE,aAAOlG,OAAO,CAACgG,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAID,IAAIrE,QAAJ;;AACI,SAASkE,SAAT,GAAoB;AAChB;AACA,SAAOlE,QAAP;AACH;;AAID,SAASN,cAAT,CAAwBD,IAAxB,EAA8B;AACzBuC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY1D,IAAI,CAACyB,QAAjB;AAET;;;;;AAMA;;AACC,MAAG;AACJ,QAAIE,QAAQ,GAAGL,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqC9B,KAApD;AACE,GAFD,CAGD,MACI;AACJ,QAAIyB,IAAJ,EACI;AACGS,MAAAA,QAAQ,GAAGT,IAAX;AACF;AACA,GApB6B,CAsBlC;;;AAEA,MAAI;AACJ,QAAI+E,cAAc,GAAG9G,MAAM,CAAC+G,MAAP,CAAcC,YAAd,CAA2BxE,QAA3B,CAArB,CADI,CAEJ;;AACAF,IAAAA,QAAQ,GAAGwE,cAAX;AACIG,IAAAA,UAAU;AAEN3C,IAAAA,OAAO,CAACC,GAAR,CAAYjC,QAAZ;AACCgC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAGR,GAVD,CAWQ,OAAM1B,GAAN,EAAU;AACNC,IAAAA,KAAK,CAAC,cAAD,CAAL;AACH;AAEJ;;AAEL,SAASoE,eAAT,GAA2B;AAC3B;AACI,MAAI5E,QAAJ,EACI;AACR;AACI,QAAI6E,WAAW,GAAGC,YAAY,CAACjF,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqC9B,KAAtC,CAA9B,CAFI,CAGI;;AACR,QAAI+G,WAAW,GAAG/E,QAAQ,CAACgF,IAAT,CAAeH,WAAf,CAAlB;AACAE,IAAAA,WAAW,CAAChE,IAAZ,CAAkBkE,iBAAD,IAAqB;AACtCpF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsC9B,KAAtC,GAA8CiH,iBAA9C;AACK,KAFL;AAGK,GATL,MAUK;AACD;AACAzE,IAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ;;AACG,SAASsE,YAAT,CAAuBI,UAAvB,EAAkC;AAC9B;AACF,MAAI;AACF,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAR,CADE,CAGF;AACA;AACA;AACA;;AACA,QAAIC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAtB,EAAgC;AAC9B,aAAOA,CAAP;AACD;AACF,GAVD,CAWA,OAAOG,CAAP,EAAU,CAAG;;AAEb,SAAO,KAAP;AACD;;AAAA,C,CAED;;AAEA,SAASX,UAAT,GAAsB;AAClB,MAAI3E,QAAJ,EACI;AACJ;AACA;AACA;AACA,QAAII,EAAE,GAAG,IAAI3C,QAAJ,EAAT;AACA2C,IAAAA,EAAE,CAACmF,GAAH,CAAO,YAAP,EAAqB;AAACjF,MAAAA,IAAI,EAACN,QAAQ,CAACE;AAAf,KAArB;AACK,GAPL,MAQI;AACAM,IAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACJ;;AACD,SAASgF,UAAT,GAAsB;AAClB;AACA;AAEA,MAAG;AACF,QAAIpF,EAAE,GAAG,IAAI3C,QAAJ,EAAT;AACDoC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqC9B,KAArC,GAA6CoC,EAAE,CAACC,GAAH,CAAO,YAAP,EAAqBC,IAAlE;AACAZ,IAAAA,cAAc;AAAG,GAHjB,CAIA,OAAMa,GAAN,EAAU,CAET;AACJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SecureLS from 'secure-ls';\n//import ethers from 'ethers';\nimport { ethers } from 'ethers';\nconst axios = require('axios');\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n        <div>\n       \n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n         \n        </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n    \n    \n    //We call the generate wallet function through here so the UI will update\n    \n    genWallet(seed)\n    {\n        generateWallet(seed);\n        this.forceUpdate();\n    }\n    revealKey()\n    {\n        document.getElementById(\"privKey\").innerHTML = (\"Private Key: \" + myWallet.privateKey);\n        document.getElementById(\"seed\").innerHTML = (\"Seed: \" + myWallet.mnemonic);\n         this.forceUpdate();\n    }\n    \n    loadSeed()\n    {\n         try{\n         let ls = new SecureLS()\n        return ls.get('walletSeed').data;\n      \n         \n         }\n        catch(err){\n            alert(err);\n        } \n    }\n    switchWallet(){\n        myWallet = null;\n        let ls = new SecureLS()\n        ls.remove('walletSeed')\n        this.forceUpdate();\n    }\n    \n    \n    \n    hardcodedload(){\n   \n        const t = this;\n         \n        var turns = [];\n        \n        \n       \n       axios.get('https://api.simbachain.com/v1/react_tictactoe/turns/',{\n            headers: {\n                'APIKEY' : '8fbfe71045403b1a0c36d73c4160f778dda31bbd2249d20cf98e3485f5743933'\n            }})\n        .then(function (response) {\n            const turn0 = response.data.results[0].payload.inputs.turn0.split(\";\");\n            const turn1 = response.data.results[0].payload.inputs.turn1.split(\";\");\n            const turn2 = response.data.results[0].payload.inputs.turn2.split(\";\");\n            const turn3 = response.data.results[0].payload.inputs.turn3.split(\";\");\n            const turn4 = response.data.results[0].payload.inputs.turn4.split(\";\");\n            const turn5 = response.data.results[0].payload.inputs.turn5.split(\";\");\n            const turn6 = response.data.results[0].payload.inputs.turn6.split(\";\");\n            const turn7 = response.data.results[0].payload.inputs.turn7.split(\";\");\n            const turn8 = response.data.results[0].payload.inputs.turn8.split(\";\");\n            const turn9 = response.data.results[0].payload.inputs.turn9.split(\";\");\n           \n           var cell;\n            for (cell = 0;  cell < turn0.length; cell++) {\n             if (turn0[cell] == \"null\") {\n                 turn0[cell] = null\n                 }   \n            }\n           \n           for (cell = 0;  cell < turn1.length; cell++) {\n             if (turn1[cell] == \"null\") {\n                 turn1[cell] = null\n                 }   \n            }\n           \n           for (cell = 0;  cell < turn2.length; cell++) {\n             if (turn2[cell] == \"null\") {\n                 turn2[cell] = null\n                 }   \n            }\n           \n           for (cell = 0;  cell < turn3.length; cell++) {\n             if (turn3[cell] == \"null\") {\n                 turn3[cell] = null\n                 }   \n            }\n           \n           \n            for (cell = 0;  cell < turn4.length; cell++) {\n             if (turn4[cell] == \"null\") {\n                 turn4[cell] = null\n                 }   \n            }\n           \n            for (cell = 0;  cell < turn4.length; cell++) {\n             if (turn5[cell] == \"null\") {\n                 turn5[cell] = null\n                 }   \n            }\n           \n            for (cell = 0;  cell < turn6.length; cell++) {\n             if (turn6[cell] == \"null\") {\n                 turn6[cell] = null\n                 }   \n            }\n           \n            for (cell = 0;  cell < turn7.length; cell++) {\n             if (turn7[cell] == \"null\") {\n                 turn7[cell] = null\n                 }   \n            }\n           \n            for (cell = 0;  cell < turn8.length; cell++) {\n             if (turn8[cell] == \"null\") {\n                 turn8[cell] = null\n                 }   \n            }\n           \n            for (cell = 0;  cell < turn9.length; cell++) {\n             if (turn9[cell] == \"null\") {\n                 turn9[cell] = null\n                 }   \n            }\n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n            \n            turns = [turn0,turn1,turn2,turn3,turn4,turn5,turn6,turn7,turn8,turn9];\n      \n           // this.displayData(turns);\n           \n           console.log(turns);\n           \n            var limit;\n           for (var i = 0; i < turns.length; i++) { \n               if (turns[i] == \" \")\n               {\n                   turns[i] = [null,null,null,null,null,null,null,null,null];\n                   \n                }\n               \n           }\n        \n            const history = t.state.history.slice(0, t.state.stepNumber + 1);\n            const current = history[history.length - 1];\n            const squares = current.squares.slice();\n            history.length = 0;\n           \n           for (var num = 0; num < turns.length; num++) {\n              \n            t.setState({\n            history: history.concat\n                ([\n                    {\n                        squares: turns[num]\n                    }\n                ]),\n            stepNumber: history.length,\n            xIsNext: !t.state.xIsNext\n            }); \n           }\n           \n           \n           \n           \n          \n           \n           \n           \n        })\n        \n        \n     \n        \n        \n        \n        \n    }\n   \n    \n    saveGame(){\n        var apiKey = \"8fbfe71045403b1a0c36d73c4160f778dda31bbd2249d20cf98e3485f5743933\";\n        console.log(\"FROM\");\n        console.log(myWallet.address);\n        console.log(\"API KEY\");\n        console.log(apiKey);\n        console.log(\"MOVES\");\n        var moves = [];\n        for (var i = 0; i < this.state.history.length; i++)\n            {\n           \n                var parsed = this.state.history[i].squares[0];\n                 for (var p = 1; p < this.state.history[i].squares.length; p++)\n                    {\n                        parsed += \";\" + this.state.history[i].squares[p];\n                    }\n                \n                moves[i] = parsed;\n            }\n        var move0 = \" \";\n        var move1 = \" \";\n        var move2 = \" \";\n        var move3 = \" \";\n        var move4 = \" \";\n        var move5 = \" \";\n        var move6 = \" \";\n        var move7 = \" \";\n        var move8 = \" \";\n        var move9 = \" \";\n        \n         for (var i = 0; i < moves.length; i++)\n             {\n                 console.log(moves[i]);\n                 \n                 if (i == 0)\n                 {move0 = moves[i];}\n                 if (i == 1)\n                 {move1 = moves[i];}\n                 if (i == 2)\n                 {move2 = moves[i];}\n                 if (i == 3)\n                 {move3 = moves[i];}\n                 if (i == 4)\n                 {move4 = moves[i];}\n                 if (i == 5)\n                 {move5 = moves[i];}\n                 if (i == 6)\n                 {move6 = moves[i];}\n                 if (i == 7)\n                 {move7 = moves[i];}\n                 if (i == 8)\n                 {move8 = moves[i];}\n                 if (i == 9)\n                 {move9 = moves[i];}\n                 \n             }\n        console.log(\"onto posting\")\n       /* var myBody = {  from: myWallet.address,\n                        name: \"Test Game\",\n                        turn0: move0,\n                        turn1: move1,\n                        turn2: move2,\n                        turn3: move3,\n                        turn4: move4,\n                        turn5: move5,\n                        turn6: move6,\n                        turn7: move7,\n                        turn8: move8,\n                        turn9: move9}; */\n        var myBody = new FormData;\n        myBody.append(\"from\",myWallet.address);\n        myBody.append(\"name\",\"Test Game\");\n        myBody.append(\"turn0\",move0);\n        myBody.append(\"turn1\",move1);\n        myBody.append(\"turn2\",move2);\n        myBody.append(\"turn3\",move3);\n        myBody.append(\"turn4\",move4);\n        myBody.append(\"turn5\",move5);\n        myBody.append(\"turn6\",move6);\n        myBody.append(\"turn7\",move7);\n        myBody.append(\"turn8\",move8);\n        myBody.append(\"turn9\",move9);\n        myBody.append(\"assetId\",\"0x0\")\n        \n        \n       \n        \n\n        \n        axios.post('https://api.simbachain.com/v1/react_tictactoe/turns/', myBody, {\n            headers: {\n                'APIKEY' : '8fbfe71045403b1a0c36d73c4160f778dda31bbd2249d20cf98e3485f5743933'\n            }})\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n        \n                \n       /* var request = new XMLHttpRequest();\n        request.open(\"POST\", \"https://api.simbachain.com/v1/react_tictactoe/#/contract_methods/turns\");\n        request.setRequestHeader(\"APIKEY\",apiKey);\n        request.setRequestHeader(\"accept\",\"application/json\");\n        request.setRequestHeader(\"Content-Type\",\"multipart/form-data\");\n        request.onload = function(oEvent) {\n        if (request.status == 200) {\n            console.log(\"Good one\");\n        } else {\n            console.log(\"oof\");\n            }\n        };\n        request.send(myBody);*/\n        console.log(\"done with posting????\")\n        \n    }\n    \n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    \n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <div>\n          <button class=\"button animatedbutton\" onClick={() => this.jumpTo(move)}>{desc}</button>\n            \n           </div>\n        </li>\n      );\n    });\n\n    //if the game is over display the save to simba button otherwise leave it as the div\n    var simbaButton = <div></div>\n    if (winner || moves.length >= 10)\n        {\n     simbaButton = <button onClick={i => this.saveGame()} class=\"bigbutton animatedbutton\">Save to SIMBA</button>\n        }\n    \n    \n    var wallet = <div><form>Wallet Seed: <input id=\"seedInput\" type=\"text\" /> </form><button class=\"bigbutton animatedbutton\" onClick={i => this.genWallet()}>Generate Wallet</button></div>\n     \n        var priv = <p></p>\n\n    var localWallet = getWallet()\n    try {  wallet = <div><p>Public Key: {localWallet.address}</p><p id=\"privKey\">Private Key:</p><p id=\"seed\">Seed:</p><button class=\"bigbutton animatedbutton\" onClick={i => this.revealKey()}>Reveal Key</button><button class=\"bigbutton animatedbutton\" onClick={i => this.switchWallet()}>Switch Wallet</button></div> }\n    catch(err)\n       {\n         var seed = this.loadSeed(); \n         if (seed)\n             {\n                 this.genWallet(seed)\n             }\n       }\n         \n         \n      \n   \n\n\n\n    let status;\n    \n          \n           return (\n        \n      <div className=\"game\">\n                 \n              \n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        <br/>\n        <br/>\n        <div>{wallet}</div>\n        <div><button class=\"bigbutton animatedbutton\" onClick={i => this.hardcodedload()}>Load game</button></div>\n    \n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n            <div>{simbaButton}</div>\n        </div>\n      </div>\n      \n    );  \n        \n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n    \n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\n\nvar myWallet;\n    function getWallet(){\n        //returns the wallet for react\n        return myWallet;\n    }\n\n  \n    \n    function generateWallet(seed) {\n         console.log(\"start generate wallet\");\n         console.log(Game.myWallet);\n    \n/*\nThis function generates the wallet based off of the value of the 'seedInput'\nThe seed should be 12 words\nThis seed generates the public and private key of your wallet\n*/\n     \n//Here we get the 12 word phrase\n try{       \nvar mnemonic = document.getElementById(\"seedInput\").value;\n }\ncatch\n    {\nif (seed)\n    {\n       mnemonic = seed \n    }\n    }\n   \n//Here the wallet is actually generated\n        \ntry {\nlet mnemonicWallet = ethers.Wallet.fromMnemonic(mnemonic);        \n//Here we assign the wallet to the global variable myWallet\nmyWallet = mnemonicWallet;\n    SaveWallet()\n    \n        console.log(myWallet);\n         console.log(\"end generate wallet\");\n    \n    \n}\n        catch(err){\n            alert(\"Invalid Seed\");\n        }\n    \n    }\n\nfunction signTransaction() {\n//This is where signing takes place\n    if (myWallet)\n        {\n//we grab the text value from 'signInput' and run the tryParseJson function found below\n    let transaction = tryParseJSON(document.getElementById(\"signInput\").value);\n            //that json is then signed here\n    let signPromise = myWallet.sign (transaction);\n    signPromise.then((signedTransaction)=>{\n    document.getElementById(\"signOutput\").value = signedTransaction;\n        });\n        }\n    else {\n        //if no wallet is found this alert runs\n        alert(\"Generate wallet before signing\");\n    }\n}\n    function tryParseJSON (jsonString){\n        //we parse the json here\n      try {\n        var o = JSON.parse(jsonString);\n\n        // Handle non-exception-throwing cases:\n        // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n        // but... JSON.parse(null) returns null, and typeof null === \"object\",\n        // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n        if (o && typeof o === \"object\") {\n          return o;\n        }\n      }\n      catch (e) { }\n\n      return false;\n    };\n    \n    //Save and load wallets\n    \n    function SaveWallet() {\n        if (myWallet)\n            {\n        //we save the 12 word wallet seed then on load we will generate everything else\n        //SecureLS is used because it does not store the 12 words in plain text\n        //If you wanted to you could make it where the user had to put in a password to unlock their account\n        let ls = new SecureLS();\n        ls.set('walletSeed', {data:myWallet.mnemonic});\n            }\n        else{\n            alert(\"No wallet present to save\");\n        }\n    }\n    function LoadWallet() {\n        //the wallet is loaded and generate wallet is ran to populate the fields\n        //while not the best code to get the seed to the generate wallet function we set the value of 'walletSeed' to the data we just loaded\n       \n        try{\n         let ls = new SecureLS()\n        document.getElementById(\"seedInput\").value = ls.get('walletSeed').data;\n        generateWallet()}\n        catch(err){\n            \n        }\n    }\n"]},"metadata":{},"sourceType":"module"}